// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.15.8
// source: layer/goevent.proto

package layer

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventCategory int32

const (
	EventCategory_E_OTHER                      EventCategory = 0
	EventCategory_E_MUSIC                      EventCategory = 1
	EventCategory_E_HOBBIES                    EventCategory = 2
	EventCategory_E_PERFORMING_AND_VISUAL_ARTS EventCategory = 3
	EventCategory_E_EDUCATION                  EventCategory = 4
	EventCategory_E_HEALTH                     EventCategory = 5
	EventCategory_E_TRAVEL_AND_OUTDOOR         EventCategory = 6
	EventCategory_E_FOOD_AND_DRINK             EventCategory = 7
	EventCategory_E_SPORTS_AND_FITNESS         EventCategory = 8
	EventCategory_E_BUSSINESS                  EventCategory = 9
)

// Enum value maps for EventCategory.
var (
	EventCategory_name = map[int32]string{
		0: "E_OTHER",
		1: "E_MUSIC",
		2: "E_HOBBIES",
		3: "E_PERFORMING_AND_VISUAL_ARTS",
		4: "E_EDUCATION",
		5: "E_HEALTH",
		6: "E_TRAVEL_AND_OUTDOOR",
		7: "E_FOOD_AND_DRINK",
		8: "E_SPORTS_AND_FITNESS",
		9: "E_BUSSINESS",
	}
	EventCategory_value = map[string]int32{
		"E_OTHER":                      0,
		"E_MUSIC":                      1,
		"E_HOBBIES":                    2,
		"E_PERFORMING_AND_VISUAL_ARTS": 3,
		"E_EDUCATION":                  4,
		"E_HEALTH":                     5,
		"E_TRAVEL_AND_OUTDOOR":         6,
		"E_FOOD_AND_DRINK":             7,
		"E_SPORTS_AND_FITNESS":         8,
		"E_BUSSINESS":                  9,
	}
)

func (x EventCategory) Enum() *EventCategory {
	p := new(EventCategory)
	*p = x
	return p
}

func (x EventCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_layer_goevent_proto_enumTypes[0].Descriptor()
}

func (EventCategory) Type() protoreflect.EnumType {
	return &file_layer_goevent_proto_enumTypes[0]
}

func (x EventCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventCategory.Descriptor instead.
func (EventCategory) EnumDescriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{0}
}

type EventStatus int32

const (
	EventStatus_E_UNSPECIFIED   EventStatus = 0
	EventStatus_E_OPEN_FOR_REG  EventStatus = 1
	EventStatus_E_CLOSE_FOR_REG EventStatus = 2
	EventStatus_E_ON_GOING      EventStatus = 3
	EventStatus_E_FINISH        EventStatus = 4
)

// Enum value maps for EventStatus.
var (
	EventStatus_name = map[int32]string{
		0: "E_UNSPECIFIED",
		1: "E_OPEN_FOR_REG",
		2: "E_CLOSE_FOR_REG",
		3: "E_ON_GOING",
		4: "E_FINISH",
	}
	EventStatus_value = map[string]int32{
		"E_UNSPECIFIED":   0,
		"E_OPEN_FOR_REG":  1,
		"E_CLOSE_FOR_REG": 2,
		"E_ON_GOING":      3,
		"E_FINISH":        4,
	}
)

func (x EventStatus) Enum() *EventStatus {
	p := new(EventStatus)
	*p = x
	return p
}

func (x EventStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_layer_goevent_proto_enumTypes[1].Descriptor()
}

func (EventStatus) Type() protoreflect.EnumType {
	return &file_layer_goevent_proto_enumTypes[1]
}

func (x EventStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventStatus.Descriptor instead.
func (EventStatus) EnumDescriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{1}
}

type ParticipantStatus int32

const (
	ParticipantStatus_P_UNSPECIFIED     ParticipantStatus = 0
	ParticipantStatus_P_REG_WAIT        ParticipantStatus = 1 //mengisi formulir pendaftaran menunggu konfirmasi
	ParticipantStatus_P_REG_ACCEPT      ParticipantStatus = 2 //formulir pendaftaran diterima
	ParticipantStatus_P_REG_REJECT      ParticipantStatus = 3 //formulir pendaftaran ditolak
	ParticipantStatus_P_PRESENCE_WAIT   ParticipantStatus = 4 //mengisi formulir absen menunggu konfirmasi
	ParticipantStatus_P_PRESENCE_ACCEPT ParticipantStatus = 5 //formulir absen diterima
	ParticipantStatus_P_PRESENCE_REJECT ParticipantStatus = 6 //formulir absen ditolak
)

// Enum value maps for ParticipantStatus.
var (
	ParticipantStatus_name = map[int32]string{
		0: "P_UNSPECIFIED",
		1: "P_REG_WAIT",
		2: "P_REG_ACCEPT",
		3: "P_REG_REJECT",
		4: "P_PRESENCE_WAIT",
		5: "P_PRESENCE_ACCEPT",
		6: "P_PRESENCE_REJECT",
	}
	ParticipantStatus_value = map[string]int32{
		"P_UNSPECIFIED":     0,
		"P_REG_WAIT":        1,
		"P_REG_ACCEPT":      2,
		"P_REG_REJECT":      3,
		"P_PRESENCE_WAIT":   4,
		"P_PRESENCE_ACCEPT": 5,
		"P_PRESENCE_REJECT": 6,
	}
)

func (x ParticipantStatus) Enum() *ParticipantStatus {
	p := new(ParticipantStatus)
	*p = x
	return p
}

func (x ParticipantStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ParticipantStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_layer_goevent_proto_enumTypes[2].Descriptor()
}

func (ParticipantStatus) Type() protoreflect.EnumType {
	return &file_layer_goevent_proto_enumTypes[2]
}

func (x ParticipantStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ParticipantStatus.Descriptor instead.
func (ParticipantStatus) EnumDescriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{2}
}

type Like struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *uint32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	User_ID  *uint32 `protobuf:"varint,2,opt,name=user_ID,json=userID,proto3,oneof" json:"user_ID,omitempty"`
	Event_ID *uint32 `protobuf:"varint,3,opt,name=event_ID,json=eventID,proto3,oneof" json:"event_ID,omitempty"`
}

func (x *Like) Reset() {
	*x = Like{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Like) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Like) ProtoMessage() {}

func (x *Like) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Like.ProtoReflect.Descriptor instead.
func (*Like) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{0}
}

func (x *Like) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *Like) GetUser_ID() uint32 {
	if x != nil && x.User_ID != nil {
		return *x.User_ID
	}
	return 0
}

func (x *Like) GetEvent_ID() uint32 {
	if x != nil && x.Event_ID != nil {
		return *x.Event_ID
	}
	return 0
}

type LikeList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Like `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *LikeList) Reset() {
	*x = LikeList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LikeList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeList) ProtoMessage() {}

func (x *LikeList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeList.ProtoReflect.Descriptor instead.
func (*LikeList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{1}
}

func (x *LikeList) GetList() []*Like {
	if x != nil {
		return x.List
	}
	return nil
}

type IDPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID *uint32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
}

func (x *IDPayload) Reset() {
	*x = IDPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IDPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IDPayload) ProtoMessage() {}

func (x *IDPayload) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IDPayload.ProtoReflect.Descriptor instead.
func (*IDPayload) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{2}
}

func (x *IDPayload) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{3}
}

type EmailPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email *string `protobuf:"bytes,1,opt,name=email,proto3,oneof" json:"email,omitempty"`
}

func (x *EmailPayload) Reset() {
	*x = EmailPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailPayload) ProtoMessage() {}

func (x *EmailPayload) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailPayload.ProtoReflect.Descriptor instead.
func (*EmailPayload) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{4}
}

func (x *EmailPayload) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type Pagination struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastID *uint32 `protobuf:"varint,1,opt,name=lastID,proto3,oneof" json:"lastID,omitempty"`
	Limit  *uint32 `protobuf:"varint,2,opt,name=limit,proto3,oneof" json:"limit,omitempty"`
	Query  *string `protobuf:"bytes,3,opt,name=query,proto3,oneof" json:"query,omitempty"`
}

func (x *Pagination) Reset() {
	*x = Pagination{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pagination) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pagination) ProtoMessage() {}

func (x *Pagination) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pagination.ProtoReflect.Descriptor instead.
func (*Pagination) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{5}
}

func (x *Pagination) GetLastID() uint32 {
	if x != nil && x.LastID != nil {
		return *x.LastID
	}
	return 0
}

func (x *Pagination) GetLimit() uint32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

func (x *Pagination) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type UserEditPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select []string `protobuf:"bytes,1,rep,name=select,proto3" json:"select,omitempty"`
	User   *User    `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	ID     *uint32  `protobuf:"varint,3,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
}

func (x *UserEditPayload) Reset() {
	*x = UserEditPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserEditPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserEditPayload) ProtoMessage() {}

func (x *UserEditPayload) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserEditPayload.ProtoReflect.Descriptor instead.
func (*UserEditPayload) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{6}
}

func (x *UserEditPayload) GetSelect() []string {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *UserEditPayload) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *UserEditPayload) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

type EventEditPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Select []string `protobuf:"bytes,1,rep,name=select,proto3" json:"select,omitempty"`
	Event  *Event   `protobuf:"bytes,2,opt,name=event,proto3" json:"event,omitempty"`
	ID     *uint32  `protobuf:"varint,3,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
}

func (x *EventEditPayload) Reset() {
	*x = EventEditPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventEditPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventEditPayload) ProtoMessage() {}

func (x *EventEditPayload) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventEditPayload.ProtoReflect.Descriptor instead.
func (*EventEditPayload) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{7}
}

func (x *EventEditPayload) GetSelect() []string {
	if x != nil {
		return x.Select
	}
	return nil
}

func (x *EventEditPayload) GetEvent() *Event {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *EventEditPayload) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID               *uint32        `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Name             *string        `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description      *string        `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	EventImg         *string        `protobuf:"bytes,4,opt,name=event_img,json=eventImg,proto3,oneof" json:"event_img,omitempty"`
	Password         *string        `protobuf:"bytes,5,opt,name=password,proto3,oneof" json:"password,omitempty"`
	Requirement      *string        `protobuf:"bytes,6,opt,name=requirement,proto3,oneof" json:"requirement,omitempty"`
	NeedPayment      *bool          `protobuf:"varint,7,opt,name=need_payment,json=needPayment,proto3,oneof" json:"need_payment,omitempty"`
	Need_ID          *bool          `protobuf:"varint,8,opt,name=need_ID,json=needID,proto3,oneof" json:"need_ID,omitempty"`
	Payment_ID       *uint32        `protobuf:"varint,9,opt,name=payment_ID,json=paymentID,proto3,oneof" json:"payment_ID,omitempty"`
	Publisher_ID     *uint32        `protobuf:"varint,10,opt,name=publisher_ID,json=publisherID,proto3,oneof" json:"publisher_ID,omitempty"`
	PaymentPrice     *float64       `protobuf:"fixed64,11,opt,name=payment_price,json=paymentPrice,proto3,oneof" json:"payment_price,omitempty"`
	EventCategory    *EventCategory `protobuf:"varint,12,opt,name=event_category,json=eventCategory,proto3,enum=layer.EventCategory,oneof" json:"event_category,omitempty"`
	IsOffline        *bool          `protobuf:"varint,13,opt,name=is_offline,json=isOffline,proto3,oneof" json:"is_offline,omitempty"`
	LocationAddress  *string        `protobuf:"bytes,14,opt,name=location_address,json=locationAddress,proto3,oneof" json:"location_address,omitempty"`
	LocationCity     *string        `protobuf:"bytes,15,opt,name=location_city,json=locationCity,proto3,oneof" json:"location_city,omitempty"`
	LocationProvince *string        `protobuf:"bytes,16,opt,name=location_province,json=locationProvince,proto3,oneof" json:"location_province,omitempty"`
	StartDate        *string        `protobuf:"bytes,17,opt,name=start_date,json=startDate,proto3,oneof" json:"start_date,omitempty"`
	FinishDate       *string        `protobuf:"bytes,18,opt,name=finish_date,json=finishDate,proto3,oneof" json:"finish_date,omitempty"`
	Status           *EventStatus   `protobuf:"varint,19,opt,name=status,proto3,enum=layer.EventStatus,oneof" json:"status,omitempty"`
	PresenceQuestion *string        `protobuf:"bytes,20,opt,name=presence_question,json=presenceQuestion,proto3,oneof" json:"presence_question,omitempty"`
	MediaLink        *string        `protobuf:"bytes,21,opt,name=media_link,json=mediaLink,proto3,oneof" json:"media_link,omitempty"`
	CreatedAt        *string        `protobuf:"bytes,22,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt        *string        `protobuf:"bytes,23,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{8}
}

func (x *Event) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *Event) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Event) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Event) GetEventImg() string {
	if x != nil && x.EventImg != nil {
		return *x.EventImg
	}
	return ""
}

func (x *Event) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

func (x *Event) GetRequirement() string {
	if x != nil && x.Requirement != nil {
		return *x.Requirement
	}
	return ""
}

func (x *Event) GetNeedPayment() bool {
	if x != nil && x.NeedPayment != nil {
		return *x.NeedPayment
	}
	return false
}

func (x *Event) GetNeed_ID() bool {
	if x != nil && x.Need_ID != nil {
		return *x.Need_ID
	}
	return false
}

func (x *Event) GetPayment_ID() uint32 {
	if x != nil && x.Payment_ID != nil {
		return *x.Payment_ID
	}
	return 0
}

func (x *Event) GetPublisher_ID() uint32 {
	if x != nil && x.Publisher_ID != nil {
		return *x.Publisher_ID
	}
	return 0
}

func (x *Event) GetPaymentPrice() float64 {
	if x != nil && x.PaymentPrice != nil {
		return *x.PaymentPrice
	}
	return 0
}

func (x *Event) GetEventCategory() EventCategory {
	if x != nil && x.EventCategory != nil {
		return *x.EventCategory
	}
	return EventCategory_E_OTHER
}

func (x *Event) GetIsOffline() bool {
	if x != nil && x.IsOffline != nil {
		return *x.IsOffline
	}
	return false
}

func (x *Event) GetLocationAddress() string {
	if x != nil && x.LocationAddress != nil {
		return *x.LocationAddress
	}
	return ""
}

func (x *Event) GetLocationCity() string {
	if x != nil && x.LocationCity != nil {
		return *x.LocationCity
	}
	return ""
}

func (x *Event) GetLocationProvince() string {
	if x != nil && x.LocationProvince != nil {
		return *x.LocationProvince
	}
	return ""
}

func (x *Event) GetStartDate() string {
	if x != nil && x.StartDate != nil {
		return *x.StartDate
	}
	return ""
}

func (x *Event) GetFinishDate() string {
	if x != nil && x.FinishDate != nil {
		return *x.FinishDate
	}
	return ""
}

func (x *Event) GetStatus() EventStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return EventStatus_E_UNSPECIFIED
}

func (x *Event) GetPresenceQuestion() string {
	if x != nil && x.PresenceQuestion != nil {
		return *x.PresenceQuestion
	}
	return ""
}

func (x *Event) GetMediaLink() string {
	if x != nil && x.MediaLink != nil {
		return *x.MediaLink
	}
	return ""
}

func (x *Event) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *Event) GetUpdatedAt() string {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return ""
}

type EventList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Event `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *EventList) Reset() {
	*x = EventList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventList) ProtoMessage() {}

func (x *EventList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventList.ProtoReflect.Descriptor instead.
func (*EventList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{9}
}

func (x *EventList) GetList() []*Event {
	if x != nil {
		return x.List
	}
	return nil
}

type Participant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID             *uint32            `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Name           *string            `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description    *string            `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ProfileImg     *string            `protobuf:"bytes,4,opt,name=profile_img,json=profileImg,proto3,oneof" json:"profile_img,omitempty"`
	CreatedAt      *string            `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt      *string            `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Email          *string            `protobuf:"bytes,7,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Register_ID    *uint32            `protobuf:"varint,8,opt,name=register_ID,json=registerID,proto3,oneof" json:"register_ID,omitempty"`
	Status         *ParticipantStatus `protobuf:"varint,9,opt,name=status,proto3,enum=layer.ParticipantStatus,oneof" json:"status,omitempty"`
	Certificate_ID *uint32            `protobuf:"varint,10,opt,name=certificate_ID,json=certificateID,proto3,oneof" json:"certificate_ID,omitempty"`
	Event_ID       *uint32            `protobuf:"varint,11,opt,name=event_ID,json=eventID,proto3,oneof" json:"event_ID,omitempty"`
	User_ID        *uint32            `protobuf:"varint,12,opt,name=user_ID,json=userID,proto3,oneof" json:"user_ID,omitempty"`
}

func (x *Participant) Reset() {
	*x = Participant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Participant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Participant) ProtoMessage() {}

func (x *Participant) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Participant.ProtoReflect.Descriptor instead.
func (*Participant) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{10}
}

func (x *Participant) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *Participant) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Participant) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *Participant) GetProfileImg() string {
	if x != nil && x.ProfileImg != nil {
		return *x.ProfileImg
	}
	return ""
}

func (x *Participant) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *Participant) GetUpdatedAt() string {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return ""
}

func (x *Participant) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *Participant) GetRegister_ID() uint32 {
	if x != nil && x.Register_ID != nil {
		return *x.Register_ID
	}
	return 0
}

func (x *Participant) GetStatus() ParticipantStatus {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ParticipantStatus_P_UNSPECIFIED
}

func (x *Participant) GetCertificate_ID() uint32 {
	if x != nil && x.Certificate_ID != nil {
		return *x.Certificate_ID
	}
	return 0
}

func (x *Participant) GetEvent_ID() uint32 {
	if x != nil && x.Event_ID != nil {
		return *x.Event_ID
	}
	return 0
}

func (x *Participant) GetUser_ID() uint32 {
	if x != nil && x.User_ID != nil {
		return *x.User_ID
	}
	return 0
}

type TagParticipantPayload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID     *uint32           `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Status ParticipantStatus `protobuf:"varint,2,opt,name=status,proto3,enum=layer.ParticipantStatus" json:"status,omitempty"`
}

func (x *TagParticipantPayload) Reset() {
	*x = TagParticipantPayload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TagParticipantPayload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TagParticipantPayload) ProtoMessage() {}

func (x *TagParticipantPayload) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TagParticipantPayload.ProtoReflect.Descriptor instead.
func (*TagParticipantPayload) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{11}
}

func (x *TagParticipantPayload) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *TagParticipantPayload) GetStatus() ParticipantStatus {
	if x != nil {
		return x.Status
	}
	return ParticipantStatus_P_UNSPECIFIED
}

type ParticipantList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Participant `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *ParticipantList) Reset() {
	*x = ParticipantList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ParticipantList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParticipantList) ProtoMessage() {}

func (x *ParticipantList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParticipantList.ProtoReflect.Descriptor instead.
func (*ParticipantList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{12}
}

func (x *ParticipantList) GetList() []*Participant {
	if x != nil {
		return x.List
	}
	return nil
}

type Register struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *uint32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	User_ID     *uint32 `protobuf:"varint,2,opt,name=User_ID,json=UserID,proto3,oneof" json:"User_ID,omitempty"`
	Event_ID    *uint32 `protobuf:"varint,3,opt,name=Event_ID,json=EventID,proto3,oneof" json:"Event_ID,omitempty"`
	Requirement *string `protobuf:"bytes,4,opt,name=requirement,proto3,oneof" json:"requirement,omitempty"`
	PaymentImg  *string `protobuf:"bytes,5,opt,name=payment_img,json=paymentImg,proto3,oneof" json:"payment_img,omitempty"`
	IDImg       *string `protobuf:"bytes,6,opt,name=ID_img,json=IDImg,proto3,oneof" json:"ID_img,omitempty"`
	CreatedAt   *string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
}

func (x *Register) Reset() {
	*x = Register{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Register) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Register) ProtoMessage() {}

func (x *Register) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Register.ProtoReflect.Descriptor instead.
func (*Register) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{13}
}

func (x *Register) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *Register) GetUser_ID() uint32 {
	if x != nil && x.User_ID != nil {
		return *x.User_ID
	}
	return 0
}

func (x *Register) GetEvent_ID() uint32 {
	if x != nil && x.Event_ID != nil {
		return *x.Event_ID
	}
	return 0
}

func (x *Register) GetRequirement() string {
	if x != nil && x.Requirement != nil {
		return *x.Requirement
	}
	return ""
}

func (x *Register) GetPaymentImg() string {
	if x != nil && x.PaymentImg != nil {
		return *x.PaymentImg
	}
	return ""
}

func (x *Register) GetIDImg() string {
	if x != nil && x.IDImg != nil {
		return *x.IDImg
	}
	return ""
}

func (x *Register) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

type RegisterList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Register `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RegisterList) Reset() {
	*x = RegisterList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterList) ProtoMessage() {}

func (x *RegisterList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterList.ProtoReflect.Descriptor instead.
func (*RegisterList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{14}
}

func (x *RegisterList) GetList() []*Register {
	if x != nil {
		return x.List
	}
	return nil
}

type Subscription struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID           *uint32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Publisher_ID *uint32 `protobuf:"varint,2,opt,name=publisher_ID,json=publisherID,proto3,oneof" json:"publisher_ID,omitempty"`
	Consumer_ID  *uint32 `protobuf:"varint,3,opt,name=consumer_ID,json=consumerID,proto3,oneof" json:"consumer_ID,omitempty"`
}

func (x *Subscription) Reset() {
	*x = Subscription{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Subscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Subscription) ProtoMessage() {}

func (x *Subscription) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Subscription.ProtoReflect.Descriptor instead.
func (*Subscription) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{15}
}

func (x *Subscription) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *Subscription) GetPublisher_ID() uint32 {
	if x != nil && x.Publisher_ID != nil {
		return *x.Publisher_ID
	}
	return 0
}

func (x *Subscription) GetConsumer_ID() uint32 {
	if x != nil && x.Consumer_ID != nil {
		return *x.Consumer_ID
	}
	return 0
}

type SubscriptionList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Subscription `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *SubscriptionList) Reset() {
	*x = SubscriptionList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionList) ProtoMessage() {}

func (x *SubscriptionList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionList.ProtoReflect.Descriptor instead.
func (*SubscriptionList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{16}
}

func (x *SubscriptionList) GetList() []*Subscription {
	if x != nil {
		return x.List
	}
	return nil
}

type Payment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID      *uint32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Name    *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Detail  *string `protobuf:"bytes,3,opt,name=detail,proto3,oneof" json:"detail,omitempty"`
	User_ID *uint32 `protobuf:"varint,4,opt,name=user_ID,json=userID,proto3,oneof" json:"user_ID,omitempty"`
}

func (x *Payment) Reset() {
	*x = Payment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payment) ProtoMessage() {}

func (x *Payment) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payment.ProtoReflect.Descriptor instead.
func (*Payment) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{17}
}

func (x *Payment) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *Payment) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Payment) GetDetail() string {
	if x != nil && x.Detail != nil {
		return *x.Detail
	}
	return ""
}

func (x *Payment) GetUser_ID() uint32 {
	if x != nil && x.User_ID != nil {
		return *x.User_ID
	}
	return 0
}

type PaymentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Payment `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *PaymentList) Reset() {
	*x = PaymentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentList) ProtoMessage() {}

func (x *PaymentList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentList.ProtoReflect.Descriptor instead.
func (*PaymentList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{18}
}

func (x *PaymentList) GetList() []*Payment {
	if x != nil {
		return x.List
	}
	return nil
}

type CertificateList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*Certificate `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *CertificateList) Reset() {
	*x = CertificateList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateList) ProtoMessage() {}

func (x *CertificateList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateList.ProtoReflect.Descriptor instead.
func (*CertificateList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{19}
}

func (x *CertificateList) GetList() []*Certificate {
	if x != nil {
		return x.List
	}
	return nil
}

type Certificate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID       *uint32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	FileUrl  *string `protobuf:"bytes,2,opt,name=file_url,json=fileUrl,proto3,oneof" json:"file_url,omitempty"`
	Event_ID *uint32 `protobuf:"varint,3,opt,name=event_ID,json=eventID,proto3,oneof" json:"event_ID,omitempty"`
	User_ID  *uint32 `protobuf:"varint,4,opt,name=user_ID,json=userID,proto3,oneof" json:"user_ID,omitempty"`
}

func (x *Certificate) Reset() {
	*x = Certificate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Certificate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Certificate) ProtoMessage() {}

func (x *Certificate) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Certificate.ProtoReflect.Descriptor instead.
func (*Certificate) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{20}
}

func (x *Certificate) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *Certificate) GetFileUrl() string {
	if x != nil && x.FileUrl != nil {
		return *x.FileUrl
	}
	return ""
}

func (x *Certificate) GetEvent_ID() uint32 {
	if x != nil && x.Event_ID != nil {
		return *x.Event_ID
	}
	return 0
}

func (x *Certificate) GetUser_ID() uint32 {
	if x != nil && x.User_ID != nil {
		return *x.User_ID
	}
	return 0
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          *uint32 `protobuf:"varint,1,opt,name=ID,proto3,oneof" json:"ID,omitempty"`
	Name        *string `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	ProfileImg  *string `protobuf:"bytes,4,opt,name=profile_img,json=profileImg,proto3,oneof" json:"profile_img,omitempty"`
	CreatedAt   *string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	UpdatedAt   *string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	Email       *string `protobuf:"bytes,7,opt,name=email,proto3,oneof" json:"email,omitempty"`
	Password    *string `protobuf:"bytes,8,opt,name=password,proto3,oneof" json:"password,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{21}
}

func (x *User) GetID() uint32 {
	if x != nil && x.ID != nil {
		return *x.ID
	}
	return 0
}

func (x *User) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *User) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *User) GetProfileImg() string {
	if x != nil && x.ProfileImg != nil {
		return *x.ProfileImg
	}
	return ""
}

func (x *User) GetCreatedAt() string {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return ""
}

func (x *User) GetUpdatedAt() string {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *User) GetPassword() string {
	if x != nil && x.Password != nil {
		return *x.Password
	}
	return ""
}

type UserList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*User `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *UserList) Reset() {
	*x = UserList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_layer_goevent_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserList) ProtoMessage() {}

func (x *UserList) ProtoReflect() protoreflect.Message {
	mi := &file_layer_goevent_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserList.ProtoReflect.Descriptor instead.
func (*UserList) Descriptor() ([]byte, []int) {
	return file_layer_goevent_proto_rawDescGZIP(), []int{22}
}

func (x *UserList) GetList() []*User {
	if x != nil {
		return x.List
	}
	return nil
}

var File_layer_goevent_proto protoreflect.FileDescriptor

var file_layer_goevent_proto_rawDesc = []byte{
	0x0a, 0x13, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2f, 0x67, 0x6f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x79, 0x0a, 0x04,
	0x4c, 0x69, 0x6b, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x07, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x22, 0x2b, 0x0a, 0x08, 0x4c, 0x69, 0x6b, 0x65, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x27, 0x0a, 0x09, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x22, 0x07, 0x0a,
	0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x33, 0x0a, 0x0c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01,
	0x01, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x7e, 0x0a, 0x0a, 0x50,
	0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x06, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x06, 0x6c, 0x61, 0x73,
	0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x02, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07,
	0x5f, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x66, 0x0a, 0x0f, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x49, 0x44, 0x22, 0x6a, 0x0a, 0x10, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45, 0x64, 0x69, 0x74,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12,
	0x22, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x22,
	0xf3, 0x09, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x17,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x09, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x03, 0x52, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x67, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x04, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01,
	0x01, 0x12, 0x25, 0x0a, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6e, 0x65, 0x65, 0x64,
	0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x48, 0x06,
	0x52, 0x0b, 0x6e, 0x65, 0x65, 0x64, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x07, 0x6e, 0x65, 0x65, 0x64, 0x5f, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x07, 0x52, 0x06, 0x6e, 0x65, 0x65, 0x64, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x22,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x08, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f,
	0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x09, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x01, 0x48, 0x0a, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x88, 0x01, 0x01, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x48, 0x0b, 0x52, 0x0d, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x48, 0x0c, 0x52, 0x09, 0x69, 0x73,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x88, 0x01, 0x01, 0x12, 0x2e, 0x0a, 0x10, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x0d, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x28, 0x0a, 0x0d, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x69, 0x74, 0x79, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x0e, 0x52, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x69, 0x74,
	0x79, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x11, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x0f, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x48, 0x10, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x66, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x11, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x44, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x2f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x12, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x48, 0x12, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x30, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x48, 0x13, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x48, 0x14, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x4c, 0x69, 0x6e, 0x6b, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x48, 0x15, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x16, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42,
	0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42,
	0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0c, 0x0a, 0x0a, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x67, 0x42, 0x0b, 0x0a,
	0x09, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6e,
	0x65, 0x65, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x5f,
	0x6e, 0x65, 0x65, 0x64, 0x5f, 0x49, 0x44, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x73, 0x68, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x69, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x42, 0x13, 0x0a, 0x11, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x69,
	0x74, 0x79, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x66, 0x69, 0x6e, 0x69,
	0x73, 0x68, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x14, 0x0a, 0x12, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x6d, 0x65, 0x64,
	0x69, 0x61, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0x2d, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xd1, 0x04, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88,
	0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03,
	0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x88, 0x01, 0x01, 0x12,
	0x22, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88,
	0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x49,
	0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x07, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x48, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x88, 0x01, 0x01, 0x12,
	0x2a, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x49,
	0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x09, 0x52, 0x0d, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x0a, 0x52,
	0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x0b, 0x52, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x49,
	0x44, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x11, 0x0a, 0x0f,
	0x5f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x49, 0x44, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x42, 0x0a, 0x0a, 0x08,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x22, 0x65, 0x0a, 0x15, 0x54, 0x61, 0x67, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52,
	0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x22,
	0x39, 0x0a, 0x0f, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69,
	0x70, 0x61, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xc4, 0x02, 0x0a, 0x08, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07,
	0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x01, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x07,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x03, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x04, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6d, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x06, 0x49, 0x44, 0x5f, 0x69, 0x6d,
	0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x05, 0x49, 0x44, 0x49, 0x6d, 0x67,
	0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x0a,
	0x0a, 0x08, 0x5f, 0x55, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x67, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x49, 0x44, 0x5f, 0x69,
	0x6d, 0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x22, 0x33, 0x0a, 0x0c, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x48, 0x01, 0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72,
	0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x02, 0x52, 0x0a, 0x63, 0x6f, 0x6e,
	0x73, 0x75, 0x6d, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49,
	0x44, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x5f,
	0x49, 0x44, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x5f,
	0x49, 0x44, 0x22, 0x3b, 0x0a, 0x10, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0x99, 0x01, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x02, 0x49,
	0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01,
	0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x06, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1c, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42,
	0x0a, 0x0a, 0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x22, 0x31, 0x0a, 0x0b, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x39,
	0x0a, 0x0f, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xad, 0x01, 0x0a, 0x0b, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x01, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x72, 0x6c, 0x88, 0x01, 0x01, 0x12, 0x1e,
	0x0a, 0x08, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x48, 0x02, 0x52, 0x07, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x1c,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x48,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x88, 0x01, 0x01, 0x42, 0x05, 0x0a, 0x03,
	0x5f, 0x49, 0x44, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x49, 0x44, 0x42, 0x0a, 0x0a,
	0x08, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x49, 0x44, 0x22, 0xea, 0x02, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x13, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00,
	0x52, 0x02, 0x49, 0x44, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x12, 0x24, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6d, 0x67, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x88, 0x01,
	0x01, 0x12, 0x22, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x05, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x06, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x88, 0x01, 0x01,
	0x12, 0x1f, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x07, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x05, 0x0a, 0x03, 0x5f, 0x49, 0x44, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x69, 0x6d,
	0x67, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x42,
	0x08, 0x0a, 0x06, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2b, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x2a, 0xd4, 0x01, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x5f, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x5f, 0x4d, 0x55, 0x53, 0x49, 0x43, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x45, 0x5f, 0x48, 0x4f, 0x42, 0x42, 0x49, 0x45, 0x53, 0x10, 0x02, 0x12, 0x20,
	0x0a, 0x1c, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x46, 0x4f, 0x52, 0x4d, 0x49, 0x4e, 0x47, 0x5f, 0x41,
	0x4e, 0x44, 0x5f, 0x56, 0x49, 0x53, 0x55, 0x41, 0x4c, 0x5f, 0x41, 0x52, 0x54, 0x53, 0x10, 0x03,
	0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x5f, 0x45, 0x44, 0x55, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x10, 0x05, 0x12,
	0x18, 0x0a, 0x14, 0x45, 0x5f, 0x54, 0x52, 0x41, 0x56, 0x45, 0x4c, 0x5f, 0x41, 0x4e, 0x44, 0x5f,
	0x4f, 0x55, 0x54, 0x44, 0x4f, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x14, 0x0a, 0x10, 0x45, 0x5f, 0x46,
	0x4f, 0x4f, 0x44, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x44, 0x52, 0x49, 0x4e, 0x4b, 0x10, 0x07, 0x12,
	0x18, 0x0a, 0x14, 0x45, 0x5f, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x5f, 0x41, 0x4e, 0x44, 0x5f,
	0x46, 0x49, 0x54, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x5f, 0x42,
	0x55, 0x53, 0x53, 0x49, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x09, 0x2a, 0x67, 0x0a, 0x0b, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x45, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x45, 0x5f, 0x4f, 0x50, 0x45, 0x4e, 0x5f, 0x46, 0x4f, 0x52, 0x5f, 0x52, 0x45, 0x47, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x53, 0x45, 0x5f, 0x46, 0x4f, 0x52, 0x5f,
	0x52, 0x45, 0x47, 0x10, 0x02, 0x12, 0x0e, 0x0a, 0x0a, 0x45, 0x5f, 0x4f, 0x4e, 0x5f, 0x47, 0x4f,
	0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x49, 0x53,
	0x48, 0x10, 0x04, 0x2a, 0x9d, 0x01, 0x0a, 0x11, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70,
	0x61, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x11, 0x0a, 0x0d, 0x50, 0x5f, 0x55,
	0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a,
	0x50, 0x5f, 0x52, 0x45, 0x47, 0x5f, 0x57, 0x41, 0x49, 0x54, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c,
	0x50, 0x5f, 0x52, 0x45, 0x47, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x02, 0x12, 0x10,
	0x0a, 0x0c, 0x50, 0x5f, 0x52, 0x45, 0x47, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x10, 0x03,
	0x12, 0x13, 0x0a, 0x0f, 0x50, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x57,
	0x41, 0x49, 0x54, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45,
	0x4e, 0x43, 0x45, 0x5f, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11,
	0x50, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x4a, 0x45, 0x43,
	0x54, 0x10, 0x06, 0x32, 0xe2, 0x01, 0x0a, 0x0a, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x2a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x10, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x29,
	0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x45, 0x64, 0x69,
	0x74, 0x12, 0x17, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x45,
	0x64, 0x69, 0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x24, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x28,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0xa5, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x35, 0x0a, 0x07, 0x54, 0x61, 0x67, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x54, 0x61, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e,
	0x74, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x32, 0xbf, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x27, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x1a, 0x0c, 0x2e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x07, 0x47,
	0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49,
	0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0f, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x13, 0x2e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x32, 0xcf, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x13, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a,
	0x17, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x10, 0x2e,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a,
	0x13, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x32, 0xc0, 0x01, 0x0a, 0x0c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f,
	0x61, 0x64, 0x1a, 0x0e, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x33, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x1a, 0x12, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x26, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x70, 0x0a, 0x10, 0x43, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x06, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x43, 0x65,
	0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x1a, 0x16, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x32, 0xb8, 0x01, 0x0a, 0x09, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x13, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0b, 0x2e, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0b, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x2c, 0x0a, 0x04, 0x45, 0x64, 0x69, 0x74, 0x12, 0x16,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x45, 0x64, 0x69, 0x74, 0x50,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x32, 0xaf, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x61, 0x79,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x11, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x50, 0x61, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0f, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x4c, 0x69, 0x6b, 0x65, 0x1a, 0x0c, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x12, 0x28, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0c,
	0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x28, 0x0a, 0x07,
	0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x10, 0x2e, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x2e,
	0x49, 0x44, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x1a, 0x0b, 0x2e, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x2e, 0x4c, 0x69, 0x6b, 0x65, 0x42, 0x15, 0x5a, 0x13, 0x72, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_layer_goevent_proto_rawDescOnce sync.Once
	file_layer_goevent_proto_rawDescData = file_layer_goevent_proto_rawDesc
)

func file_layer_goevent_proto_rawDescGZIP() []byte {
	file_layer_goevent_proto_rawDescOnce.Do(func() {
		file_layer_goevent_proto_rawDescData = protoimpl.X.CompressGZIP(file_layer_goevent_proto_rawDescData)
	})
	return file_layer_goevent_proto_rawDescData
}

var file_layer_goevent_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_layer_goevent_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_layer_goevent_proto_goTypes = []interface{}{
	(EventCategory)(0),            // 0: layer.EventCategory
	(EventStatus)(0),              // 1: layer.EventStatus
	(ParticipantStatus)(0),        // 2: layer.ParticipantStatus
	(*Like)(nil),                  // 3: layer.Like
	(*LikeList)(nil),              // 4: layer.LikeList
	(*IDPayload)(nil),             // 5: layer.IDPayload
	(*Empty)(nil),                 // 6: layer.Empty
	(*EmailPayload)(nil),          // 7: layer.EmailPayload
	(*Pagination)(nil),            // 8: layer.Pagination
	(*UserEditPayload)(nil),       // 9: layer.UserEditPayload
	(*EventEditPayload)(nil),      // 10: layer.EventEditPayload
	(*Event)(nil),                 // 11: layer.Event
	(*EventList)(nil),             // 12: layer.EventList
	(*Participant)(nil),           // 13: layer.Participant
	(*TagParticipantPayload)(nil), // 14: layer.TagParticipantPayload
	(*ParticipantList)(nil),       // 15: layer.ParticipantList
	(*Register)(nil),              // 16: layer.Register
	(*RegisterList)(nil),          // 17: layer.RegisterList
	(*Subscription)(nil),          // 18: layer.Subscription
	(*SubscriptionList)(nil),      // 19: layer.SubscriptionList
	(*Payment)(nil),               // 20: layer.Payment
	(*PaymentList)(nil),           // 21: layer.PaymentList
	(*CertificateList)(nil),       // 22: layer.CertificateList
	(*Certificate)(nil),           // 23: layer.Certificate
	(*User)(nil),                  // 24: layer.User
	(*UserList)(nil),              // 25: layer.UserList
}
var file_layer_goevent_proto_depIdxs = []int32{
	3,  // 0: layer.LikeList.list:type_name -> layer.Like
	24, // 1: layer.UserEditPayload.user:type_name -> layer.User
	11, // 2: layer.EventEditPayload.event:type_name -> layer.Event
	0,  // 3: layer.Event.event_category:type_name -> layer.EventCategory
	1,  // 4: layer.Event.status:type_name -> layer.EventStatus
	11, // 5: layer.EventList.list:type_name -> layer.Event
	2,  // 6: layer.Participant.status:type_name -> layer.ParticipantStatus
	2,  // 7: layer.TagParticipantPayload.status:type_name -> layer.ParticipantStatus
	13, // 8: layer.ParticipantList.list:type_name -> layer.Participant
	16, // 9: layer.RegisterList.list:type_name -> layer.Register
	18, // 10: layer.SubscriptionList.list:type_name -> layer.Subscription
	20, // 11: layer.PaymentList.list:type_name -> layer.Payment
	23, // 12: layer.CertificateList.list:type_name -> layer.Certificate
	24, // 13: layer.UserList.list:type_name -> layer.User
	8,  // 14: layer.EventLayer.Get:input_type -> layer.Pagination
	5,  // 15: layer.EventLayer.GetByID:input_type -> layer.IDPayload
	10, // 16: layer.EventLayer.Edit:input_type -> layer.EventEditPayload
	11, // 17: layer.EventLayer.Create:input_type -> layer.Event
	5,  // 18: layer.EventLayer.Delete:input_type -> layer.IDPayload
	8,  // 19: layer.ParticipantLayer.Get:input_type -> layer.Pagination
	14, // 20: layer.ParticipantLayer.TagByID:input_type -> layer.TagParticipantPayload
	5,  // 21: layer.ParticipantLayer.Delete:input_type -> layer.IDPayload
	16, // 22: layer.RegisterLayer.Create:input_type -> layer.Register
	5,  // 23: layer.RegisterLayer.GetByID:input_type -> layer.IDPayload
	5,  // 24: layer.RegisterLayer.Delete:input_type -> layer.IDPayload
	8,  // 25: layer.RegisterLayer.Get:input_type -> layer.Pagination
	18, // 26: layer.SubscriptionLayer.Create:input_type -> layer.Subscription
	8,  // 27: layer.SubscriptionLayer.Get:input_type -> layer.Pagination
	5,  // 28: layer.SubscriptionLayer.Delete:input_type -> layer.IDPayload
	5,  // 29: layer.SubscriptionLayer.GetByID:input_type -> layer.IDPayload
	5,  // 30: layer.PaymentLayer.GetByID:input_type -> layer.IDPayload
	5,  // 31: layer.PaymentLayer.GetByUserID:input_type -> layer.IDPayload
	20, // 32: layer.PaymentLayer.Create:input_type -> layer.Payment
	20, // 33: layer.PaymentLayer.Delete:input_type -> layer.Payment
	23, // 34: layer.CertificateLayer.Create:input_type -> layer.Certificate
	8,  // 35: layer.CertificateLayer.Get:input_type -> layer.Pagination
	7,  // 36: layer.UserLayer.GetByEmail:input_type -> layer.EmailPayload
	5,  // 37: layer.UserLayer.GetByID:input_type -> layer.IDPayload
	24, // 38: layer.UserLayer.Create:input_type -> layer.User
	9,  // 39: layer.UserLayer.Edit:input_type -> layer.UserEditPayload
	8,  // 40: layer.LikeLayer.Get:input_type -> layer.Pagination
	3,  // 41: layer.LikeLayer.Create:input_type -> layer.Like
	5,  // 42: layer.LikeLayer.Delete:input_type -> layer.IDPayload
	5,  // 43: layer.LikeLayer.GetByID:input_type -> layer.IDPayload
	12, // 44: layer.EventLayer.Get:output_type -> layer.EventList
	11, // 45: layer.EventLayer.GetByID:output_type -> layer.Event
	6,  // 46: layer.EventLayer.Edit:output_type -> layer.Empty
	6,  // 47: layer.EventLayer.Create:output_type -> layer.Empty
	6,  // 48: layer.EventLayer.Delete:output_type -> layer.Empty
	15, // 49: layer.ParticipantLayer.Get:output_type -> layer.ParticipantList
	6,  // 50: layer.ParticipantLayer.TagByID:output_type -> layer.Empty
	6,  // 51: layer.ParticipantLayer.Delete:output_type -> layer.Empty
	6,  // 52: layer.RegisterLayer.Create:output_type -> layer.Empty
	16, // 53: layer.RegisterLayer.GetByID:output_type -> layer.Register
	6,  // 54: layer.RegisterLayer.Delete:output_type -> layer.Empty
	17, // 55: layer.RegisterLayer.Get:output_type -> layer.RegisterList
	6,  // 56: layer.SubscriptionLayer.Create:output_type -> layer.Empty
	19, // 57: layer.SubscriptionLayer.Get:output_type -> layer.SubscriptionList
	6,  // 58: layer.SubscriptionLayer.Delete:output_type -> layer.Empty
	18, // 59: layer.SubscriptionLayer.GetByID:output_type -> layer.Subscription
	20, // 60: layer.PaymentLayer.GetByID:output_type -> layer.Payment
	21, // 61: layer.PaymentLayer.GetByUserID:output_type -> layer.PaymentList
	6,  // 62: layer.PaymentLayer.Create:output_type -> layer.Empty
	6,  // 63: layer.PaymentLayer.Delete:output_type -> layer.Empty
	6,  // 64: layer.CertificateLayer.Create:output_type -> layer.Empty
	22, // 65: layer.CertificateLayer.Get:output_type -> layer.CertificateList
	24, // 66: layer.UserLayer.GetByEmail:output_type -> layer.User
	24, // 67: layer.UserLayer.GetByID:output_type -> layer.User
	6,  // 68: layer.UserLayer.Create:output_type -> layer.Empty
	6,  // 69: layer.UserLayer.Edit:output_type -> layer.Empty
	4,  // 70: layer.LikeLayer.Get:output_type -> layer.LikeList
	6,  // 71: layer.LikeLayer.Create:output_type -> layer.Empty
	6,  // 72: layer.LikeLayer.Delete:output_type -> layer.Empty
	3,  // 73: layer.LikeLayer.GetByID:output_type -> layer.Like
	44, // [44:74] is the sub-list for method output_type
	14, // [14:44] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_layer_goevent_proto_init() }
func file_layer_goevent_proto_init() {
	if File_layer_goevent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_layer_goevent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Like); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LikeList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IDPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pagination); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserEditPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventEditPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Participant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TagParticipantPayload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ParticipantList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Register); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Subscription); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Certificate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_layer_goevent_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_layer_goevent_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[2].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[10].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[11].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[13].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[15].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[17].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_layer_goevent_proto_msgTypes[21].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_layer_goevent_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   8,
		},
		GoTypes:           file_layer_goevent_proto_goTypes,
		DependencyIndexes: file_layer_goevent_proto_depIdxs,
		EnumInfos:         file_layer_goevent_proto_enumTypes,
		MessageInfos:      file_layer_goevent_proto_msgTypes,
	}.Build()
	File_layer_goevent_proto = out.File
	file_layer_goevent_proto_rawDesc = nil
	file_layer_goevent_proto_goTypes = nil
	file_layer_goevent_proto_depIdxs = nil
}
